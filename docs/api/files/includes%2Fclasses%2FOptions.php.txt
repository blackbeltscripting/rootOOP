<?php
namespace rootOOP\Core;

class Options {
	function __construct() {
		global $MySQL;
		$table = (object) [
			'name' => 'options', 
			'cols' => array( 
				(object) [
					'name' => 'id',
					'type' => 'BIGINT',
					'type_num' => '20',
					'extra' => 'AUTO_INCREMENT PRIMARY KEY'
				],
				(object) [
					'name' => 'option_name',
					'type' => 'VARCHAR',
					'type_num' => '64',
					'extra' => false
				],
				(object) [
					'name' => 'option_value',
					'type' => 'LONGTEXT',
					'type_num' => false,
					'extra' => false
				]
			)
		];
		$MySQL->check_table($table);
	}
	//	Alias for add
	function set($option, $value = null) {
		$this->add($option, $value);
	}
	public function add($option, $value = null) {
		global $MySQL;
		if($this->get_raw($option) === false) {
			//	Add it, get it, return it.
			$MySQL->insert("options", array("option_name" => $option, "option_value" => serialize($value)));
			return $this->get($option);
		}
	}
	public function get($option, $default_value = false) {
		if($r = $this->get_raw($option, $default_value) ) {
			if($r != $default_value) {
				return unserialize($r['option_value']);
			} else {
				return $default_value;
			}
		}
	}
	protected function get_raw($option, $default_value = false) {
		global $MySQL;
		
		$r = $MySQL->select("options", array("option_name" => $option));
		
		if(!empty($r)) {
			return $r;
		} else {
			return $default_value;
		}
	}
	public function delete($option) {
		global $MySQL;
		$o = $this->get_raw($option);
		if(!empty($o))
			return $MySQL->delete("options", array("option_id" => $o['option_id']));
	}
}

